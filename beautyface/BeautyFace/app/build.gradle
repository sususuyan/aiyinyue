apply plugin: 'com.android.library'

android {
    compileSdkVersion 30
    defaultConfig {
//        applicationId "com.zeusee.main.beautyFace"
        minSdkVersion 19
        targetSdkVersion 28
        versionCode 2
        versionName "3.0"
        flavorDimensions "versionCode"
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'

        externalNativeBuild {
            cmake {
                cmake {
                    cppFlags "-std=c++11 -frtti -fexceptions"
                    abiFilters 'armeabi-v7a', 'arm64-v8a'
                    version "3.10.2"
                }
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

 //   productFlavors {
        // 通用app
//        app1 {
//            // 设置applicationId（这里很重要，两个相同applicationId的apk不同同时安装在同一台Android手机中）
//            applicationId "com.zeusee.main.beautyFace"
//            // 自动生成@string/app_name为 app1的名称
//            // 注意，这里是添加，在 string.xml 不能有这个字段，会重名！！！
//            resValue "string", "beautyFace1", "美颜"
//            // 定义app_icon等字段，在AndroidManifest.xml文件中用到
//            manifestPlaceholders = [app_icon     : "@drawable/ic_launcher",
//                                    app_roundicon: "@mipmap/ic_launcher1",
//                                    // 因为每个APP包名不同，所以需要单独配置每个APP的第三方key
//                                    // 修改 AndroidManifest.xml 里 地图appkey
//                                    map_appkey   : "111111"]
//        }
        // app2
//        app2 {
//            applicationId "com.zeusee.main.beautyFace"
//            resValue "string", "beautyFace2", "beautyFace"
//            manifestPlaceholders = [app_icon     : "@mipmap/ic_launcher",
//                                    app_roundicon: "@mipmap/ic_launcher2",
//                                    map_appkey   : "222222"]
//        }
  //  }
//    android.applicationVariants.all {
//        variant ->
//            variant.outputs.all {
//                //这里修改apk文件名
//                outputFileName = "美颜_v${defaultConfig.versionName}_${buildType.name}.apk"
//            }
//    }


    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['src/main/jniLibs']
        }
    }
    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }

}
dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0'
}
